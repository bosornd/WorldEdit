buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url = "https://files.minecraftforge.net/maven" }
        jcenter()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

def minecraftVersion = "1.13"
def forgeVersion = "24.0.32-1.13-pre"

dependencies {
    compile project(':worldedit-core')

    minecraft "net.minecraftforge.test:forge:${minecraftVersion}-${forgeVersion}"

    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.0-rc1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    mappings channel: 'snapshot', version: '20180921-1.13'
}

project.archivesBaseName = "${project.archivesBaseName}-mc${minecraftVersion}"

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', minecraftVersion
    inputs.property 'internalVersion', internalVersion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion': minecraftVersion, 'internalVersion': internalVersion
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}

jar {
    manifest {
        attributes("Class-Path": "truezip.jar WorldEdit/truezip.jar js.jar WorldEdit/js.jar",
                   "WorldEdit-Version": version,
                   "FMLAT": "worldedit_at.cfg")
    }
}

shadowJar {
    dependencies {
        include(dependency(':worldedit-core'))
    }
}

//reobf {
//    shadowJar {
//        mappingType = 'SEARGE'
//    }
//}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}
